name: 'Mockbin Action'
description: 'Tool for testing actions by mocking binaries'
inputs:
  command:
    description: 'Command to mock'
    required: true
  assert-call-index:
    description: 'Assert call index (starts with 0)'
    default: '0'
    required: false
  assert-args:
    description: 'Assert call arguments'
    required: false
  assert-stdin:
    description: 'Assert piped stdin'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Configure image, secrets, and deploy image
      env:
        MOCKBIN_PATH: ${{ github.workspace }}/.mockbin
        MOCKCOMMAND: ${{ inputs.command }}
        ASSERT_CALL_INDEX: ${{ inputs.assert-call-index }}
        ASSERT_ARGS: ${{ inputs.assert-args }}
        ASSERT_STDIN: ${{ inputs.assert-stdin }}
      run: |
        if [[ ! -d "$MOCKBIN_PATH" ]]; then
          mkdir -p "$MOCKBIN_PATH"
          MOCKBIN_ORIGINAL_NODEJS=$(which node)
          PATH="$MOCKBIN_PATH:$PATH"
          echo "Extending PATH: $PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "MOCKBIN_PATH=$MOCKBIN_PATH" >> $GITHUB_ENV
          echo "MOCKBIN_ORIGINAL_NODEJS=$MOCKBIN_ORIGINAL_NODEJS" >> $GITHUB_ENV
        fi

        # Create executable mock
        if [[ ! -f "$MOCKBIN_PATH/$MOCKCOMMAND" ]]; then
          echo "#!${MOCKBIN_ORIGINAL_NODEJS}" > "$MOCKBIN_PATH/$MOCKCOMMAND"
          cat "${{ github.action_path }}/assets/mockbin.js" >> "$MOCKBIN_PATH/$MOCKCOMMAND"
          chmod +x "$MOCKBIN_PATH/$MOCKCOMMAND"
        fi

        if [[ -n "$ASSERT_ARGS$ASSERT_STDIN" ]]; then
          echo "Performing assertion on: $MOCKBIN_PATH/$MOCKCOMMAND.mockbinout"
          $MOCKBIN_ORIGINAL_NODEJS "${{ github.action_path }}/assets/assert.js" \
            --output-file "$MOCKBIN_PATH/$MOCKCOMMAND.mockbinout" \
            --output-index "$ASSERT_CALL_INDEX" \
            --expected-args "$ASSERT_ARGS" \
            --expected-stdin "$ASSERT_STDIN"
        fi

      shell: bash
