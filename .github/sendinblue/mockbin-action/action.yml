name: 'Mockbin Action'
description: 'Tool for testing actions by mocking binaries'
inputs:
  commands:
    description: 'Commands to mock'
    required: true
  assert-call-index:
    description: 'Assert for call (starting) with the given index'
    required: false
  assert-args:
    description: 'Assert for calls with given arguments (JSON array)'
    required: false
  assert-stdin:
    description: 'Assert piped stdin'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Configure image, secrets, and deploy image
      env:
        MOCKBIN_PATH: ${{ github.workspace }}/.mockbin
        COMMANDS: ${{ inputs.commands }}
        ASSERT_CALL_INDEX: ${{ inputs.assert-call-index }}
        ASSERT_ARGS: ${{ inputs.assert-args }}
        ASSERT_STDIN: ${{ inputs.assert-stdin }}
      run: |
        if [[ ! -d "$MOCKBIN_PATH" ]]; then
          mkdir -p "$MOCKBIN_PATH"
          MOCKBIN_ORIGINAL_NODEJS=$(which node)
          PATH="$MOCKBIN_PATH:$PATH"
          echo "Extending PATH: $PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "MOCKBIN_PATH=$MOCKBIN_PATH" >> $GITHUB_ENV
          echo "MOCKBIN_ORIGINAL_NODEJS=$MOCKBIN_ORIGINAL_NODEJS" >> $GITHUB_ENV
        fi

        source "$GITHUB_ACTION_PATH/lib/create_command_mock.sh"
        source "$GITHUB_ACTION_PATH/lib/perform_assert.sh"

        while IFS= read -r cmd; do
          if [[ -n "$cmd" ]]; then
            create_command_mock "$cmd"

            call_index=${ASSERT_CALL_INDEX:=0}
            while IFS= read -r expected_args; do
              if [[ -n "$expected_args" ]]; then
                perform_assert "$cmd" "$call_index" "$expected_args"
                echo "Counter: $call_index"
                call_index=$($call_index + 1)
                echo "After: $call_index"
              fi
            done <<< "$ASSERT_ARGS"
          fi
        done <<< "$COMMANDS"

      shell: bash
